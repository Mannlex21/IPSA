@model AplicacionWebMVC.Models.Usuarios
@{
    ViewBag.Title = "Registro";
}
<script type="text/javascript">
        $(window).load(function () {
            setTimeout(function () {
                $(".loader").fadeOut(100);
            }, 1000);
        });
        var username = "@HttpContext.Current.User.Identity.Name";
        console.log(username);
</script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/departamento.js")"></script>
@if (!User.Identity.IsAuthenticated)
{
    Response.Redirect("~/Home/Index");
}
<div class="loader"></div>
<h2>Registro de proveedor</h2>

@using (Html.BeginForm("RegistroProveedor", "Proveedor", new { user = HttpContext.Current.User.Identity.Name }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.nombreUsuario, "Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombreUsuario, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombreUsuario, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" style="display:none;">
        @Html.LabelFor(model => model.idEmpleado, "ID del Empleado", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.idEmpleado, new { htmlAttributes = new { @class = "form-control", @Value="0"} })
            @Html.ValidationMessageFor(model => model.idEmpleado, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.contrasena, "Contraseña", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.contrasena, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.contrasena, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.registradoPor, "Registrado por", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.registradoPor, new { htmlAttributes = new { @class = "form-control", @Value = HttpContext.Current.User.Identity.Name, @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.registradoPor, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" style="display:none;">
        @Html.LabelFor(model => model.departamento, "Departamento", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.departamento, new { htmlAttributes = new { @class = "form-control", @Value = "0", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.departamento, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Role, "Rol", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control", @Value = "Proveedor", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" id="guardarRegistro" />
        </div>
    </div>
</div>
}