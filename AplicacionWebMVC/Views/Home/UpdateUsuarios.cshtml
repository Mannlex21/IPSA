@model AplicacionWebMVC.Models.Usuarios

@{
    ViewBag.Title = "UpdateUsuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (!User.Identity.IsAuthenticated)
{
    Response.Redirect("~/Home/Index");
}
<h2>Actualizacion de Usuario</h2>

@using (Html.BeginForm("UpdateUsuarios", "Home",new { username = Model.nombreUsuario, usernameA = HttpContext.Current.User.Identity.Name,idUser = Model.idUsuario }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idUsuario)

        <div class="form-group">
            @Html.LabelFor(model => model.nombreUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombreUsuario, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.nombreUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contrasena, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contrasena, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contrasena, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idEmpleado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.idEmpleado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idEmpleado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.registradoPor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.registradoPor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.registradoPor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, "Rol", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role, new List<SelectListItem>
                    {
                                        new SelectListItem() {Text = "Administrador", Value="Admin"},
                                        new SelectListItem() {Text = "Empleado", Value="Empleado"},
                                        new SelectListItem() {Text = "Visitante", Value="Visitante"}
                    }, new { @class = "form-control" })

                <!--@Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })-->
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

