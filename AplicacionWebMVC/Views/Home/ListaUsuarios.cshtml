@model PagedList.IPagedList<AplicacionWebMVC.Models.Usuarios>
@using PagedList.Mvc;
@{
    ViewBag.Title = "ListaUsuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts
{
    <script type="text/javascript">
        $(window).load(function () {
            setTimeout(function () {
                $(".loader").fadeOut(100);
            }, 1000);
        });
    </script>
}

@if (!User.Identity.IsAuthenticated)
{
    Response.Redirect("~/Home/Index");
}
<div class="loader"></div>
<h2>Lista de Usuarios</h2>
<table class="table">
    <tr>
        <th style="text-align: center;">
            Nombre de usuario
        </th>
        <th style="text-align: center;">
            Contraseña
        </th>
        <th style="text-align: center;">
            Id de empleado
        </th>
        <th style="text-align: center;">
            Departamento
        </th>
        <th style="text-align: center;">
            Registrado por
        </th>
        <th style="text-align: center;">
            Rol
        </th>
        <th style="text-align: center;"></th>
    </tr>

    @foreach (var item in Model.Where(u => u.Role != "Proveedor"))
    {
        <tr>
            <td style="text-align: center;">
                @Html.DisplayFor(modelItem => item.nombreUsuario)
            </td>
            <td style="text-align: center;">
                @Html.DisplayFor(modelItem => item.contrasena)
            </td>
            <td style="text-align: center;">
                @Html.DisplayFor(modelItem => item.idEmpleado)
            </td>
            <td style="text-align: center;">
                @Html.DisplayFor(modelItem => item.departamento)
            </td>
            <td style="text-align: center;">
                @Html.DisplayFor(modelItem => item.registradoPor)
            </td>
            <td style="text-align: center;">
                @Html.DisplayFor(modelItem => item.Role)
            </td>
            <td style="text-align: center;">
                @Html.ActionLink(" ", "UpdateUsuarios", new { id = item.idUsuario, username = item.nombreUsuario, usernameA = HttpContext.Current.User.Identity.Name }, new { @class = "btn btn-info glyphicon glyphicon-pencil" })
                @Html.ActionLink(" ", "DeleteUsuarios", new { id = item.idUsuario, username = HttpContext.Current.User.Identity.Name }, new { @class = "btn btn-danger glyphicon glyphicon-remove" })
            </td>
        </tr>
    }

</table>
Pagina @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ListaUsuarios", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
